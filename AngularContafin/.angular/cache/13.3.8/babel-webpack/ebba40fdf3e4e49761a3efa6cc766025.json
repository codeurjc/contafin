{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\contafin\\\\AngularContafin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\contafin\\\\AngularContafin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar BASE_URL = environment.apiBase + '/User';\nexport var UserService = /*#__PURE__*/(function () {\n  var UserService = /*#__PURE__*/function () {\n    function UserService(http) {\n      _classCallCheck(this, UserService);\n\n      this.http = http;\n    }\n\n    _createClass(UserService, [{\n      key: \"getUser\",\n      value: function getUser(id) {\n        var _this = this;\n\n        var headers = new HttpHeaders({\n          'X-Requested-With': 'XMLHttpRequest'\n        });\n        return this.http.get(BASE_URL + '/' + id, {\n          withCredentials: true\n        }).mapTo(function (response) {\n          _this.user = response;\n          return _this.user;\n        }).catch(function (error) {\n          return _this.handleError(error);\n        });\n      }\n    }, {\n      key: \"deleteAccount\",\n      value: function deleteAccount(id) {\n        var _this2 = this;\n\n        var headers = new HttpHeaders({\n          'X-Requested-With': 'XMLHttpRequest'\n        });\n        return this.http.delete(BASE_URL + '/' + id, {\n          withCredentials: true\n        }).catch(function (error) {\n          return _this2.handleError(error);\n        });\n      }\n    }, {\n      key: \"validation\",\n      value: function validation(id, pass) {\n        var _this3 = this;\n\n        var headers = new HttpHeaders({\n          'Accept': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        });\n        return this.http.get(BASE_URL + '/' + id + '/Validation/' + pass, {\n          withCredentials: true,\n          headers: headers\n        }).catch(function (error) {\n          return _this3.handleError(error);\n        });\n      }\n    }, {\n      key: \"updateUser\",\n      value: function updateUser(id, updatedUser) {\n        var _this4 = this;\n\n        var headers = new HttpHeaders({\n          'Accept': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        });\n        return this.http.put(BASE_URL + '/' + id, updatedUser, {\n          withCredentials: true,\n          headers: headers\n        }).catch(function (error) {\n          return _this4.handleError(error);\n        });\n      }\n    }, {\n      key: \"setGoal\",\n      value: function setGoal(id, goal) {\n        var _this5 = this;\n\n        var headers = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        });\n        return this.http.put(BASE_URL + '/' + id + '/Goal', {\n          withCredentials: true,\n          headers: headers\n        }).catch(function (error) {\n          return _this5.handleError(error);\n        });\n      }\n    }, {\n      key: \"uploadImage\",\n      value: function uploadImage(id, formData) {\n        var _this6 = this;\n\n        var headers = new HttpHeaders({\n          'Accept': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        });\n        return this.http.post(BASE_URL + '/' + id + '/Photo', formData, {\n          withCredentials: true,\n          headers: headers\n        }).catch(function (error) {\n          return _this6.handleError(error);\n        });\n      }\n    }, {\n      key: \"getProgress\",\n      value: function getProgress(id) {\n        var _this7 = this;\n\n        var headers = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        });\n        return this.http.get(BASE_URL + '/' + id + '/Progress', {\n          withCredentials: true,\n          headers: headers\n        }).catch(function (error) {\n          return _this7.handleError(error);\n        });\n      }\n    }, {\n      key: \"handleError\",\n      value: function handleError(error) {\n        console.error(error);\n        return ErrorObservable.create('Server error (' + error.status + '): ' + error.text());\n      }\n    }]);\n\n    return UserService;\n  }();\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}