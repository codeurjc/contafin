{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\contafin\\\\AngularContafin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\contafin\\\\AngularContafin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _get from \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\contafin\\\\AngularContafin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\get.js\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\contafin\\\\AngularContafin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\contafin\\\\AngularContafin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\contafin\\\\AngularContafin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport var HotObservable = /*#__PURE__*/function (_Subject) {\n  _inherits(HotObservable, _Subject);\n\n  var _super = _createSuper(HotObservable);\n\n  function HotObservable(messages, scheduler) {\n    var _this;\n\n    _classCallCheck(this, HotObservable);\n\n    _this = _super.call(this);\n    _this.messages = messages;\n    _this.subscriptions = [];\n    _this.scheduler = scheduler;\n    return _this;\n  }\n\n  _createClass(HotObservable, [{\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var subject = this;\n      var index = subject.logSubscribedFrame();\n      var subscription = new Subscription();\n      subscription.add(new Subscription(function () {\n        subject.logUnsubscribedFrame(index);\n      }));\n      subscription.add(_get(_getPrototypeOf(HotObservable.prototype), \"_subscribe\", this).call(this, subscriber));\n      return subscription;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      var subject = this;\n      var messagesLength = subject.messages.length;\n\n      for (var i = 0; i < messagesLength; i++) {\n        (function () {\n          var message = subject.messages[i];\n          subject.scheduler.schedule(function () {\n            message.notification.observe(subject);\n          }, message.frame);\n        })();\n      }\n    }\n  }]);\n\n  return HotObservable;\n}(Subject);\napplyMixins(HotObservable, [SubscriptionLoggable]); //# sourceMappingURL=HotObservable.js.map","map":null,"metadata":{},"sourceType":"module"}